# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-01-05 15:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import eventtools.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_finals_can_be_submitted', models.BooleanField()),
                ('org_payment_details_can_be_changed', models.BooleanField()),
                ('admins_can_register', models.BooleanField()),
                ('mentor_first_evals_can_be_submitted', models.BooleanField()),
                ('students_can_edit_project', models.BooleanField()),
                ('tax_forms_can_be_uploaded', models.BooleanField()),
                ('accepted_projects_published', models.BooleanField()),
                ('student_first_evals_can_be_submitted', models.BooleanField()),
                ('second_enrollment_forms_can_be_submitted', models.BooleanField()),
                ('enrollments_can_be_reviewed', models.BooleanField()),
                ('mentor_second_evals_can_be_submitted', models.BooleanField()),
                ('slots_can_be_assigned', models.BooleanField()),
                ('second_eval_emails_can_be_sent', models.BooleanField()),
                ('orgs_can_be_edited', models.BooleanField()),
                ('mentor_finals_can_be_submitted', models.BooleanField()),
                ('slot_allocation_emails_can_be_sent', models.BooleanField()),
                ('projects_can_be_accepted', models.BooleanField()),
                ('enrollments_can_undergo_second_review', models.BooleanField()),
                ('orgs_can_be_accepted', models.BooleanField()),
                ('students_can_register', models.BooleanField()),
                ('second_enrollments_can_be_reviewed', models.BooleanField()),
                ('second_enrollment_forms_can_be_re_submitted', models.BooleanField()),
                ('org_members_can_edit_proposal', models.BooleanField()),
                ('evaluations_in_progress', models.BooleanField()),
                ('proposal_can_be_deleted', models.BooleanField()),
                ('accepted_orgs_published', models.BooleanField()),
                ('results_published', models.BooleanField()),
                ('send_assignee_emails', models.BooleanField()),
                ('org_members_can_view_final_proposals', models.BooleanField()),
                ('orgs_can_register', models.BooleanField()),
                ('student_second_evals_can_be_submitted', models.BooleanField()),
                ('enrollment_forms_can_be_submitted', models.BooleanField()),
                ('project_decisions_emails_can_be_sent', models.BooleanField()),
                ('orgs_can_see_enrollment_status', models.BooleanField()),
                ('proposal_in_progress', models.BooleanField()),
                ('orgs_have_been_accepted', models.BooleanField()),
                ('mentors_can_register', models.BooleanField()),
                ('final_evaluations_emails_can_be_sent', models.BooleanField()),
                ('slots_can_be_requested', models.BooleanField()),
                ('org_accept_reject_emails_can_be_sent', models.BooleanField()),
                ('org_payment_details_visible', models.BooleanField()),
                ('students_can_submit_proposals', models.BooleanField()),
                ('student_withdrawals_trigger_email', models.BooleanField()),
                ('enrollment_forms_can_be_re_submitted', models.BooleanField()),
                ('tax_forms_can_be_reviewed', models.BooleanField()),
                ('first_eval_emails_can_be_sent', models.BooleanField()),
                ('second_review_status_visible', models.BooleanField()),
                ('project_decisions_can_be_finalized', models.BooleanField()),
                ('student_home_address_is_editable', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Gsoc',
            fields=[
                ('count', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='GsocEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.CreateModel(
            name='GsocOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(db_index=True)),
                ('end', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('repeat', eventtools.models.ChoiceTextField(blank=True, choices=[('RRULE:FREQ=DAILY', 'Daily'), ('RRULE:FREQ=WEEKLY', 'Weekly'), ('RRULE:FREQ=MONTHLY', 'Monthly'), ('RRULE:FREQ=YEARLY', 'Yearly')], default='')),
                ('repeat_until', models.DateField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gsoc.GsocEvent')),
            ],
            options={
                'ordering': ('start', 'end'),
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('url', models.URLField(blank=True)),
                ('summary', models.TextField(default='', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('year', models.IntegerField(primary_key=True, serialize=False)),
                ('projects_accepted_count', models.IntegerField()),
                ('org_accepted_count', models.IntegerField()),
                ('state', models.CharField(max_length=100)),
                ('is_current', models.BooleanField()),
                ('results_announced', models.DateField()),
                ('tax_forms_deadline', models.DateField()),
                ('first_payments', models.DateField()),
                ('second_payments', models.DateField()),
                ('final_payments', models.DateField()),
                ('first_evaluations_finalized', models.DateField()),
                ('second_evaluations_finalized', models.DateField()),
                ('final_evaluations_finalized', models.DateField()),
                ('slot_allocation_finalized', models.DateField()),
                ('second_enrollment_form_upload_deadline', models.DateField()),
                ('coding_period', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coding_period', to='gsoc.GsocEvent')),
                ('community_bonding_period', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='community_bonding_period', to='gsoc.GsocEvent')),
                ('final_evaluations_mentor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='final_evaluations_mentor', to='gsoc.GsocEvent')),
                ('final_week', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='final_week', to='gsoc.GsocEvent')),
                ('first_evaluations', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='first_evaluations', to='gsoc.GsocEvent')),
                ('first_work_period', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='first_work_period', to='gsoc.GsocEvent')),
                ('gsoc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gsoc.Gsoc')),
                ('org_approval', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='org_approval', to='gsoc.GsocEvent')),
                ('org_signup_open', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='org_signup_open', to='gsoc.GsocEvent')),
                ('orgs_published', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='org_published', to='gsoc.GsocEvent')),
                ('post_program', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='post_program', to='gsoc.GsocEvent')),
                ('project_acceptance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='project_acceptance', to='gsoc.GsocEvent')),
                ('project_decisions_finalization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='project_decisions_finalization', to='gsoc.GsocEvent')),
                ('second_evaluations', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='second_evaluations', to='gsoc.GsocEvent')),
                ('second_work_period', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='second_work_period', to='gsoc.GsocEvent')),
                ('slot_allocation_grace_period', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='slot_allocation_grace_period', to='gsoc.GsocEvent')),
                ('slot_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='slot_request', to='gsoc.GsocEvent')),
                ('student_signup_open', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_signup_open', to='gsoc.GsocEvent')),
                ('third_work_period', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='third_work_period', to='gsoc.GsocEvent')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_lines_of_code', models.IntegerField()),
                ('homepage_start_button', models.CharField(max_length=100)),
                ('homepage_intro_paragraph', models.TextField()),
                ('number_of_mentors', models.IntegerField()),
                ('number_of_student_and_mentor_countries', models.IntegerField()),
                ('number_of_years', models.IntegerField()),
                ('homepage_orgs_paragraph', models.TextField()),
                ('homepage_students_paragraph', models.TextField()),
                ('number_of_organizations', models.IntegerField()),
                ('number_of_student_countries', models.IntegerField()),
                ('program', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gsoc.Program')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('summary', models.TextField(default='', max_length=300)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gsoc.Mentor')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gsoc.Organization')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gsoc.Program')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gsoc.Student'),
        ),
        migrations.AddField(
            model_name='organization',
            name='technologies',
            field=models.ManyToManyField(to='gsoc.Technology'),
        ),
        migrations.AddField(
            model_name='organization',
            name='topics',
            field=models.ManyToManyField(to='gsoc.Topic'),
        ),
        migrations.AddField(
            model_name='feature',
            name='program',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gsoc.Program'),
        ),
    ]
